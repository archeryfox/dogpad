import React, {useEffect, useState} from 'react';
import {useParams} from 'react-router-dom';
import useEventStore from '../stores/EventStore.js';
import Markdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import rehypeRaw from "rehype-raw";
import {format} from 'date-fns';
import useAuthStore from "../stores/AuthStore.js";
import useSubscriptionStore from "../stores/SubscriptionStore.js";
import useVenueStore from "../stores/VenueStore.js";
import YandexMap from "../components/YandexMap.jsx"
import axios from "axios";
import useTransactionsStore from "../stores/TransactionStore.js";

import { Link } from 'react-router-dom'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Link –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

const EventDetail = ({onSubscribe, onUnsubscribe}) => {
    const {id} = useParams();  // –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–±—ã—Ç–∏—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞
    const {events, fetchEvents} = useEventStore();
    const [event, setEvent] = useState(null);
    const {venues, fetchVenues} = useVenueStore()
    const { addTransaction } = useTransactionsStore(); // –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const {user, updateUserBalance } = useAuthStore();  // –î–æ—Å—Ç—É–ø –∫ —Ç–µ–∫—É—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const {subscriptions, fetchSubscriptions, addSubscription, deleteSubscription} = useSubscriptionStore();  // –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    const [eventLocation, setEventLocation] = useState([]);
    const [isLoading, setIsLoading] = useState(true);

    const getGeoPos = async () => {
        if (event) {
            try {
                const data = axios.get(
                    `https://geocode-maps.yandex.ru/1.x/?apikey=7e3a7d16-eafb-487d-89fa-c51c36723612&format=json&geocode=${encodeURIComponent(event.venue.address)}`
                )
                    .then(response => {
                            console.log(response.data.response)
                            return response.data.response;
                        }
                    ).then((data) => {
                        const pos = data.GeoObjectCollection?.featureMember[0]?.GeoObject.Point.pos;
                        if (pos) {
                            const coordinates = pos.split(' ').map(Number).reverse();
                            setEventLocation(coordinates);
                            console.log(coordinates)
                        } else {
                            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞:', data);
                        }
                    })
                    .catch(e =>
                        console.log(e)
                    );
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫:', error);
            }
        } else {
            setEventLocation([]);
        }
    };

    useEffect(() => {
        fetchEvents();
        fetchVenues();
        fetchSubscriptions();
    }, []);

    useEffect(() => {
        if (events.length > 0 && subscriptions.length > 0) {
            const foundEvent = events.find((e) => e.id === parseInt(id));
            setEvent(foundEvent);
            setIsLoading(false);
        }
    }, [events, subscriptions, id]);

    useEffect(() => {
        if (event && event.venue?.address) {
            getGeoPos(); // –í—ã–∑–æ–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–µ –∏ –∞–¥—Ä–µ—Å —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        }
    }, [event]); // –î–æ–±–∞–≤–ª—è–µ–º event –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

    const handleSubscribe = async () => {
        if (!user) {
            alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏!");
            return;
        }

        if (user.balance < event.price) {
            alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —ç—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.");
            return;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        const transactionData = {
            amount: event.price, // –°—É–º–º–∞, —É–∫–∞–∑–∞–Ω–Ω–∞—è –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
            userId: user.id,
            eventId: event.id,
        };

        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        await addTransaction(transactionData, user);

        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏
        const newBalance = user.balance - event.price;
        console.log(newBalance)
        await updateUserBalance(newBalance, user.id);
        alert("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ!");
    };

    const handleDeleteSubscription = (eventId) => {
        const subscriptionToDelete = subscriptions.find(sub => sub.eventId === eventId && sub.userId === user?.id);
        if (subscriptionToDelete) {
            deleteSubscription(subscriptionToDelete.id);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ –∏ –æ—Ç—Å—Ç—É–ø–æ–≤
    const formatDescription = (text) => {
        return text.replace(/\\n/g, '\n'); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–∏–º–≤–æ–ª—ã `\n` –≤ –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
    };

    if (isLoading) {
        return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    }

    if (!event) {
        return <div>–°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>;
    }

    let isSubscribed = subscriptions.some(sub => sub.eventId === event.id && sub.userId === user?.id);

    return (
        <div className="event-detail-container mx-auto max-w-4xl p-6">
            {/* –ë–∞–Ω–Ω–µ—Ä —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è */}
            {event.image && (
                <div className="event-banner mb-6 w-full h-[30em] relative rounded-lg overflow-hidden">
                    <div style={{paddingTop: '75%'}}>
                        <img
                            src={event.image}
                            alt={event.name}
                            className="absolute top-0 left-0 w-full h-full object-cover rounded-lg"
                        />
                    </div>
                </div>
            )}

            {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è */}
            <h2 className="text-4xl font-bold text-center mb-4">{event.name}</h2>

            {/* –î–∞—Ç–∞ –∏ –º–µ—Å—Ç–æ */}
            <div className="flex justify-between text-gray-600 mb-4">
                <p className="text-lg">–î–∞—Ç–∞: {format(new Date(event.date), 'dd.MM.yyyy HH:mm')}</p>
                <p className="text-lg">–ú–µ—Å—Ç–æ: {event?.venue?.address ?? "–û–Ω–ª–∞–π–Ω"}</p>
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è */}
            <div className="event-description text-gray-800 mb-6">
                <Markdown rehypePlugins={[rehypeRaw]} remarkPlugins={[remarkGfm]}>
                    {formatDescription(event.description)}
                </Markdown>
            </div>

            {/* –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä */}
            <div className="organizer-info bg-gray-100 p-4 rounded-lg mb-6">
                <h3 className="text-2xl font-semibold">–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä</h3>
                <div className="flex items-center mt-2">
                    <img src={event.organizer.avatar} alt={event.organizer.name}
                         className="w-12 h-12 rounded-full mr-4"/>
                    <div>
                        <p className="font-bold">{event.organizer.name}</p>
                        <p className="text-gray-600">{event.organizer.email}</p>
                    </div>
                </div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞ */}
            {event.organizer.id === user.id && (
                <div className="text-center mb-6">
                    <Link to={`/update-event/${event.id}`} className="text-blue-500 hover:text-blue-700">
                        <span className="inline-block p-2 border rounded-full">
                            üñäÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </span>
                    </Link>
                </div>
            )}

            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
            {event.categories.length > 0 && (
                <div className="categories-info bg-gray-100 p-4 rounded-lg mb-6">
                    <h3 className="text-2xl font-semibold">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                    <ul className="list-disc pl-5 mt-2">
                        {event.categories.map((category, index) => (
                            <li key={index} className="text-gray-700">{category.category.name}</li>
                        ))}
                    </ul>
                </div>
            )}

            {/* –°–ø–∏–∫–µ—Ä—ã */}
            {event.speakers.length > 0 && (
                <div className="speakers-info bg-gray-100 p-4 rounded-lg mb-6">
                    <h3 className="text-2xl font-semibold">–°–ø–∏–∫–µ—Ä—ã</h3>
                    <ul className="list-disc pl-5 mt-2">
                        {event.speakers.map((speaker, index) => (
                            <li key={index} className="text-gray-700">{speaker.speaker.name}</li>
                        ))}
                    </ul>
                </div>
            )}

            {/* –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ */}
            {event.subscriptions.length > 0 && (
                <div className="subscriptions-info bg-gray-100 p-4 rounded-lg mb-6">
                    <h3 className="text-2xl font-semibold">–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ {event.subscriptions.length}</h3>
                </div>
            )}
            {!event.subscriptions.length  && (
                <div className="subscriptions-info bg-gray-100 p-4 rounded-lg mb-6">
                    <h3 className="text-2xl font-semibold">–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª—Å—è</h3>
                </div>
            )}

            {event.venue && eventLocation &&
                <YandexMap initialCoordinates={eventLocation}/>
            }

            {/* –¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ */}
            {event.price > 0 && (
                <div className="text-center mb-4">
                    <span className="text-lg text-red-600">–¶–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {event.price} ‚ÇΩ</span>
                </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏/–æ—Ç–ø–∏—Å–∫–∏ */}
            {user && !isSubscribed && event.price > 0 && (
                <div className="text-center">
                    <button onClick={handleSubscribe} className="btn p-2 hover:text-white rounded btn-primary mb-4">
                        –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
                    </button>
                </div>
            )}

            {user && isSubscribed && event.price > 0 && (
                <div className="text-center">
                    <button onClick={() => handleDeleteSubscription(event.id)} className="btn btn-secondary mb-4">
                        –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                    </button>
                </div>
            )}

            {!user && (
                <div className="text-center mb-4">
                    <button onClick={handleSubscribe} className="btn btn-primary mb-4">
                        –í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
                    </button>
                </div>
            )}
        </div>
    );
};

export default EventDetail;
